@article{ALHO20131912,
title = {Breaking down the requirements: Reliability in remote handling software},
journal = {Fusion Engineering and Design},
volume = {88},
number = {9},
pages = {1912-1915},
year = {2013},
note = {Proceedings of the 27th Symposium On Fusion Technology (SOFT-27); Liège, Belgium, September 24-28, 2012},
issn = {0920-3796},
doi = {https://doi.org/10.1016/j.fusengdes.2012.11.008},
url = {https://www.sciencedirect.com/science/article/pii/S0920379612004711},
author = {Pekka Alho and Jouni Mattila},
keywords = {remote handling, control system, software, requirements, reliability, dependability},
abstract = {Software requirements have an important role in achieving reliability for operational systems like remote handling: requirements are the basis for architectural design decisions and also the main cause of defects in high quality software. We analyze related recommendations and requirements given in software safety standards, handbooks etc. and apply them to remote handling control systems, which typically have safety-critical functionality, but are not actual safety-systems⿿for example the safety-systems in ITER will be hardware-based. Based on the analysis, we develop a set of generic recommendations for control system software requirements, including quality attributes, software fault tolerance, and safety and as an example we analyze ITER remote handling system software requirements to identify and present dependability requirements in a useful manner. Based on the analysis, we divide a high-level control system into safety-critical and non-safety-critical subsystems, and give examples of requirements that support building a dependable system.}
}

@article{10.1145/1060710.1060712,
author = {Nerur, Sridhar and Mahapatra, RadhaKanta and Mangalaraj, George},
title = {Challenges of Migrating to Agile Methodologies},
year = {2005},
issue_date = {May 2005},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {48},
number = {5},
issn = {0001-0782},
url = {https://doi.org/10.1145/1060710.1060712},
doi = {10.1145/1060710.1060712},
abstract = {Software development methodologies are constantly evolving due to changing technologies and new demands from users. Today's dynamic business environment has given rise to emergent organizations that continuously adapt their structures, strategies, and policies to suit the new environment [12]. Such organizations need information systems that constantly evolve to meet their changing requirements---but the traditional, plan-driven software development methodologies lack the flexibility to dynamically adjust the development process.},
journal = {Commun. ACM},
month = {may},
pages = {72–78},
numpages = {7}
}

@inproceedings{tiwari2012selecting,
  title={Selecting requirement elicitation techniques for software projects},
  author={Tiwari, Saurabh and Rathore, Santosh Singh and Gupta, Atul},
  booktitle={2012 CSI Sixth International Conference on Software Engineering (CONSEG)},
  pages={1--10},
  year={2012},
  organization={IEEE}
}

@article{information_gathering_1,
title = {Information Gathering Methods and Tools: A Comparative Study.},
journal = {IUP Journal of Information Technology 13.14},
year = {2017},
pages = {51-62}
}

@article{silhavy2011requirements,
  title={Requirements gathering methods in system engineering},
  author={Silhavy, Radek and Silhavy, Petr and Prokopova, Zdenka},
  journal={Recent Researches in Automatic Control},
  pages={105--110},
  year={2011}
}

@inproceedings{10.1145/2884781.2884788,
author = {Eckhardt, Jonas and Vogelsang, Andreas and Fern\'{a}ndez, Daniel M\'{e}ndez},
title = {Are "Non-Functional" Requirements Really Non-Functional? An Investigation of Non-Functional Requirements in Practice},
year = {2016},
isbn = {9781450339001},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2884781.2884788},
doi = {10.1145/2884781.2884788},
abstract = {Non-functional requirements (NFRs) are commonly distinguished from functional requirements by differentiating how the system shall do something in contrast to what the system shall do. This distinction is not only prevalent in research, but also influences how requirements are handled in practice. NFRs are usually documented separately from functional requirements, without quantitative measures, and with relatively vague descriptions. As a result, they remain difficult to analyze and test. Several authors argue, however, that many so-called NFRs actually describe behavioral properties and may be treated the same way as functional requirements. In this paper, we empirically investigate this point of view and aim to increase our understanding on the nature of NFRs addressing system properties. We report on the classification of 530 NFRs extracted from 11 industrial requirements specifications and analyze to which extent these NFRs describe system behavior. Our results suggest that most "non-functional" requirements are not non-functional as they describe behavior of a system. Consequently, we argue that many so-called NFRs can be handled similarly to functional requirements.},
booktitle = {Proceedings of the 38th International Conference on Software Engineering},
pages = {832–842},
numpages = {11},
keywords = {model-based development, empirical studies, non-functional requirements, classification},
location = {Austin, Texas},
series = {ICSE '16}
}

@article{budde1992prototyping,
  title={What is prototyping?},
  author={Budde, Reinhard and Kautz, Karlheinz and Kuhlenkamp, Karin and Z{\"u}llighoven, Heinz},
  journal={Information Technology \& People},
  year={1992},
  publisher={MCB UP Ltd}
}

@article{BASTIEN2010e18,
title = {Usability testing: a review of some methodological and technical aspects of the method},
journal = {International Journal of Medical Informatics},
volume = {79},
number = {4},
pages = {e18-e23},
year = {2010},
note = {Human Factors Engineering for Healthcare Applications Special Issue},
issn = {1386-5056},
doi = {https://doi.org/10.1016/j.ijmedinf.2008.12.004},
url = {https://www.sciencedirect.com/science/article/pii/S1386505608002098},
author = {J.M. Christian Bastien},
keywords = {User centered design, User testing, Usability testing, Empirical user test, Users, Remote usability evaluation, Diary, Automatic capture, User events, Log files, User traces, Usability testing tools, Mobile applications},
abstract = {The aim of this paper is to review some work conducted in the field of user testing that aims at specifying or clarifying the test procedures and at defining and developing tools to help conduct user tests. The topics that have been selected were considered relevant for evaluating applications in the field of medical and health care informatics. These topics are: the number of participants that should take part in a user test, the test procedure, remote usability evaluation, usability testing tools, and evaluating mobile applications.}
}

@article{vsimek2015usability,
  title={Usability of UX methods in agrarian sector-verification},
  author={{\v{S}}imek, Pavel and Van{\v{e}}k, Ji{\v{r}}{\'\i} and Pavl{\'\i}k, P},
  journal={Agris on-line Papers in Economics and Informatics},
  volume={7},
  number={665-2016-45086},
  pages={49--56},
  year={2015}
}

<div class="open_grepper_editor" title="Edit & Save To Grepper"></div>